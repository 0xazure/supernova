language: rust
sudo: false

# Need to cache the whole `.cargo` directory to keep .crates.toml for
# cargo-update to work, but don't cache the cargo registry
before_cache:
  - rm -rf /home/travis/.cargo/registry
cache:
  directories:
    - /home/travis/.cargo

DEPLOY_TO_GITHUB: &DEPLOY_TO_GITHUB
  before_deploy:
    - name="supernova-$TRAVIS_TAG-$TARGET"
    - mkdir $name
    - cp target/$TARGET/release/supernova $name/
    - cp README.md LICENSE-MIT LICENSE-APACHE $name/
    - tar czvf $name.tar.gz $name
    - sha1sum $name.tar.gz > $name.tar.gz.sha1
  deploy:
    provider: releases
    api_key: $GH_TOKEN
    file:
    - supernova-$TRAVIS_TAG-$TARGET.tar.gz
    - $name.tar.gz.sha1
    skip_cleanup: true
    on:
      branch: master
      repo: 0xazure/supernova
      tags: true

matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true
  include:
    - name: Linux-Stable
      env: TARGET=x86_64-unknown-linux-gnu
      rust: stable
      before_script:
        - rustup component add clippy-preview
        - cargo clippy --version
        - rustup component add rustfmt
        - rustfmt --version
      script:
        - cargo clippy --all-targets --all-features -- -D warnings
        - cargo fmt --all -- --check
        - cargo test --verbose
        - cargo build --release --target $TARGET --locked
      <<: *DEPLOY_TO_GITHUB

    - name: Linux-Beta
      env: TARGET=x86_64-unknown-linux-gnu
      rust: beta
      before_script:
        - rustup component add rustfmt
        - rustfmt --version
      script:
        - cargo fmt --all -- --check
        - cargo test --verbose
        - cargo build --verbose

    - name: Linux-Nightly
      env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
      before_script:
        - rustup component add clippy-preview
        - cargo clippy --version
        - rustup component add rustfmt
        - rustfmt --version
      script:
        - cargo clippy --all-targets --all-features -- -D warnings
        - cargo fmt --all -- --check
        - cargo test --verbose
        - cargo build --verbose
    
    - name: Windows-Stable
      os: windows
      env: TARGET=x86_64-pc-windows-msvc
      rust: stable
      before_script:
        - rustup component add clippy-preview
        - cargo clippy --version
        - rustup component add rustfmt
        - rustfmt --version
      script:
        - cargo clippy --all-targets --all-features -- -D warnings
        - cargo fmt --all -- --check
        - cargo test --verbose
        - cargo build --release --target $TARGET --locked
      <<: *DEPLOY_TO_GITHUB

    - name: Windows-Beta
      os: windows
      env: TARGET=x86_64-pc-windows-msvc
      rust: beta
      before_script:
        - rustup component add rustfmt
        - rustfmt --version
      script:
        - cargo fmt --all -- --check
        - cargo test --verbose
        - cargo build --verbose

    - name: Windows-Nightly
      os: windows
      env: TARGET=x86_64-pc-windows-msvc
      rust: nightly
      before_script:
        - rustup component add clippy-preview
        - cargo clippy --version
        - rustup component add rustfmt
        - rustfmt --version
      script:
        - cargo clippy --all-targets --all-features -- -D warnings
        - cargo fmt --all -- --check
        - cargo test --verbose
        - cargo build --verbose
